---
import Layout from "../layouts/Layout.astro";
import Gallery from "../components/sections/gallery/Gallery.astro";
import LandInfo from "../components/sections/land-info/LandInfo.astro";
import Container from "../layouts/Container.astro";
import LandPreviews from "../components/sections/land-previews/LandPreviews.astro";

import type { GetStaticPaths } from "astro";

const mockLands = [
  {
    slug: "example-land-1",
    title: "Example Land 1",
    tag: "Popular",
    images: [{ src: "/path/to/image1.jpg", kind: "image", title: "Image 1", url: "/path/to/image1.jpg", originalSize: "1024x768", type: "image/jpeg" }],
    videos: [],
    suggestedLands: ["example-land-2"],
  },
  {
    slug: "example-land-2",
    title: "Example Land 2",
    tag: "New",
    images: [{ src: "/path/to/image2.jpg", kind: "image", title: "Image 2", url: "/path/to/image2.jpg", originalSize: "1024x768", type: "image/jpeg" }],
    videos: [],
    suggestedLands: [],
  },
];

export const getStaticPaths = () => {
  return mockLands.map((land) => ({
    params: { slug: land.slug },
    props: { land },
  }));
};

const land = Astro.props.land;

const suggestedLands = land.suggestedLands
  ? mockLands.filter((l) => land.suggestedLands.includes(l.slug))
  : [];
---

<Layout pageTitle={land.title || "Land"}>
  <Container
    className="bg-gradient-to-t from-[#40527338] pb-6 pt-16 lg:from-[--color-secondary-lighter] lg:pb-6 lg:pt-20"
  >
    <Gallery
      tag={land.tag}
      images={land.images || []}
      videos={land.videos || []}
    />
    <LandInfo land={land} />
  </Container>

  {
    suggestedLands.length > 0 && (
      <LandPreviews
        promotedLands={suggested
