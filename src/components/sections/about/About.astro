---
import Container from "../../../layouts/Container.astro";

import SaleIcon from "./icons/Sale.astro";
import OwnerIcon from "./icons/Owner.astro";
import SearchIcon from "./icons/Search.astro";
import CheckIcon from "./icons/CheckIcon.astro";
import CheckIconSolid from "./icons/CheckIconSolid.astro";

import Item from "./Item.astro";
---

<Container
  fullHeight={true}
  attributes={{
    "data-scroll": "",
    "data-scroll-speed": "-0.46",
    "data-scroll-offset": "100%,90%",
    "data-scroll-event-progress": "aboutSectionScrollProgressEvent",
  }}
  className="xl:[perspective:2000px] md:pt-[40vh] md:pb-[60vh] xl:pb-[45vh] xl:pt-[55vh] 2xl:pb-[50vh] 2xl:pt-[50vh] portrait:md:pt-[45vh] portrait:md:pb-[55vh] -z-10 relative"
>
  <h2
    class="uppercase text-xs md:text-sm tracking-wider font-semibold px-6 pb-6 opacity-40 pt-4 md:pt-24 z-10"
  >
    Services
  </h2>
  <p
    class="text-sm md:text-base font-normal opacity-90 tracking-wide leading-relaxed max-w-prose text-center z-10"
  >
    We offer a wide range of services to help you find your dream home.
  </p>
  <div
    id="about-container"
    class="grid xl:grid-cols-6 xl:grid-rows-[minmax(0,1fr),7rem,minmax(0,1fr)] xl:gap-x-32 justify-items-center w-full mt-12 pb-6 md:mb-12 grid-cols-1 md:grid-cols-[1fr,.5rem,1fr] md:gap-y-6 xl:gap-y-0 [perspective:1000px]"
  >
    <div
      id="icon-1"
      class="xl:self-end xl:-mb-3.5 [grid-row:1/2] mt-10 md:[grid-row:1/3] md:[grid-column:3/4] xl:[grid-column:1/3] xl:[grid-row:1/2]"
    >
      <div class="w-24 h-24 xl:w-28 xl:h-28"><SaleIcon /></div>
    </div>
    <div
      id="icon-2"
      class="xl:self-end xl:-mb-5 [grid-row:4/5] mt-10 md:[grid-column:1/2] md:[grid-row:3/5] xl:[grid-column:3/5] xl:[grid-row:1/2]"
    >
      <div class="w-24 h-24 xl:w-28 xl:h-28"><SearchIcon /></div>
    </div>
    <div
      id="icon-3"
      class="xl:self-end xl:-mb-3.5 [grid-row:7/8] mt-10 md:[grid-column:3/4] md:[grid-row:5/7] xl:[grid-column:5/7] xl:[grid-row:1/2]"
    >
      <div class="w-24 h-24 xl:w-28 xl:h-28"><OwnerIcon /></div>
    </div>

    <div
      id="border"
      class="xl:[grid-column:2/6] xl:[grid-row:2/3] xl:h-1 xl:w-[111%] self-center xl:border-b-[--color-accent-lighter] xl:border-r-0 xl:border-b-2 border-dotted hidden md:block md:[grid-column:2/3] md:[grid-row:2/6] md:border-r-[--color-accent-lighter] md:border-r-2 md:h-full md:w-0 relative"
    >
      <div
        id="border-overlay"
        class="h-full w-4 xl:w-[100%] xl:h-4 bg-white absolute xl:-top-2 xl:left-0 -left-2 top-0"
      >
      </div>
    </div>

    <div
      id="check-1"
      class="self-center xl:[grid-column:1/3] xl:[grid-row:2/3] hidden md:block md:[grid-row:1/3] md:[grid-column:2/3]"
    >
      <CheckIcon />
    </div>
    <div
      id="check-2"
      class="self-center xl:[grid-column:3/5] xl:[grid-row:2/3] hidden md:block md:[grid-row:3/5] md:[grid-column:2/3]"
    >
      <CheckIconSolid />
    </div>
    <div
      id="check-3"
      class="self-center xl:[grid-column:5/7] xl:[grid-row:2/3] hidden md:block md:[grid-row:5/7] md:[grid-column:2/3]"
    >
      <CheckIcon />
    </div>
    <div
      id="item-1"
      class="[grid-row:3/4] mt-8 mb-12 md:[grid-row:1/3] md:translate-y-6 xl:[grid-row:3/4] xl:[grid-column:1/3] xl:translate-y-0 xl:mt-4"
    >
      <Item
        title="Cash Offers for Quick Sales"
        textBehind="1"
        description="If you're short on time and need a fast sale, we offer cash offers for your property. Skip the lengthy process and get a fair, no-hassle cash offer today, with no commissions or hidden fees. Ideal for those looking to sell quickly and move on with their lives."
      />
    </div>
    <div
      id="item-2"
      class="xl:col-span-2 [grid-row:6/7] mt-8 mb-12 md:[grid-row:3/5] md:translate-y-6 xl:translate-y-0 xl:mt-4"
    >
      <Item
        title="Exclusive Pre-Market Properties"
        textBehind="2"
        description="Gain access to exclusive homes before they’re listed on the market. As part of our network, you’ll get a first look at properties, giving you a competitive edge in finding the perfect home. Don't wait for others to beat you to it—contact us to see what's coming soon."
      />
    </div>
    <div
      id="item-3"
      class="[grid-row:9/10] mt-8 mb-12 md:[grid-row:5/7] md:translate-y-8 xl:[grid-row:3/4] xl:[grid-column:5/7] xl:translate-y-0 xl:mt-4"
    >
      <Item
        title="Commercial Properties"
        textBehind="3"
        description="Explore a wide range of commercial properties suited for businesses of all sizes. Our listings include office spaces, retail locations, industrial warehouses, and more, each with detailed information and 3D scans to help you make an informed decision."
      />
    </div>
  </div>
</Container>

<!-- Анимация секции "О нас" при прокрутке   -->
<script>
  import gsap from "gsap";
  import isMobileDevice from "../../../scripts/isMobileDevice";

  if (!isMobileDevice()) {
    const isLargeScreen = window.innerWidth >= 1280;

    const animationTimelineAboutCards = gsap
      .timeline({
        paused: true,
        defaults: { ease: "linear" },
        snap: {
          snapTo: "labels",
          duration: { min: 0.2, max: 3 },
          delay: 0.2,
          ease: "linear",
        },
      })
      .addLabel("start")
      .from("#icon-1", {
        translateZ: 500,
        translateX: 250,
        duration: 0.6,
        opacity: 0,
      })
      .fromTo(
        "#item-1",
        { translateZ: 500, translateX: 250, opacity: 0 },
        {
          translateZ: 0,
          translateX: 0,
          duration: 0.6,
          opacity: 1,
        },
        "-=0.4"
      )
      .from(
        "#check-1",
        {
          scale: 0.3,
          opacity: 0,
          duration: 0.8,
          ease: "elastic.out(1, 0.3)",
        },
        "-=0.2"
      )
      .addLabel("item-1-end")
      .fromTo(
        "#border-overlay",
        { scaleX: 1, scaleY: 1, transformOrigin: "right bottom" },
        {
          scaleX: isLargeScreen ? 0.5 : 1,
          scaleY: isLargeScreen ? 1 : 0.5,
          duration: 0.8,
          ease: "easeOutQuart",
          transformOrigin: "right bottom",
        },
        "-=0.2"
      )
      .from(
        "#icon-2",
        {
          translateZ: 500,
          translateX: 0,
          duration: 0.6,
          opacity: 0,
        },
        "-=0.4"
      )
      .fromTo(
        "#item-2",
        { translateZ: 500, translateX: 250, opacity: 0 },
        {
          translateZ: 0,
          translateX: 0,
          duration: 0.6,
          opacity: 1,
        },
        "-=0.4"
      )
      .fromTo(
        "#check-2",
        {
          scale: 0.3,
          opacity: 0,
        },
        {
          scale: 1,
          opacity: 0.99,
          duration: 0.8,
          ease: "elastic.out(1, 0.3)",
        },
        "-=0.2"
      )
      .addLabel("item-2-end")
      .to(
        "#border-overlay",
        {
          scaleX: isLargeScreen ? 0 : 1,
          scaleY: isLargeScreen ? 1 : 0,
          duration: 0.6,
          ease: "easeOutQuart",
          transformOrigin: "right bottom",
        },

        "-=0.2"
      )
      .from(
        "#icon-3",
        {
          translateZ: 500,
          translateX: 0,
          duration: 0.6,
          opacity: 0,
        },
        "-=0.4"
      )
      .fromTo(
        "#item-3",
        { translateZ: 500, translateX: 250, opacity: 0 },
        {
          translateZ: 0,
          translateX: 0,
          duration: 0.6,
          opacity: 1,
        },
        "-=0.4"
      )
      .from(
        "#check-3",
        {
          scale: 0.3,
          opacity: 0,
          duration: 0.8,
          ease: "elastic.out(1, 0.3)",
        },
        "-=0.2"
      )
      .addLabel("end");

    const animationTimelineAboutContainer = gsap
      .timeline({
        paused: true,
        defaults: { ease: "linear" },
      })
      .fromTo(
        "#about-container",
        {
          translateZ: 400,
          rotateZ: 0,
          rotateX: 0,
          rotateY: 0,
        },
        {
          translateZ: 0,
          duration: animationTimelineAboutCards.duration() + 1.2,
        }
      );

    window.addEventListener("aboutSectionScrollProgressEvent", (e) => {
      const { progress } = (e as CustomEvent).detail;

      animationTimelineAboutCards.progress(progress);
      animationTimelineAboutContainer.progress(progress);
    });
  }
</script>
